{
  "openapi": "3.1.0",
  "info": {
    "title": "sqlx-todos",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/stories": {
      "get": {
        "tags": [
          "Story"
        ],
        "summary": "Get a page of stories",
        "operationId": "get_stories",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of stories per page",
            "required": false,
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "maximum": 100,
              "minimum": 5
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "The page cursor (next_page from response)",
            "required": false,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of stories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Story"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Story"
        ],
        "summary": "Create a new story",
        "operationId": "create_story",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The story was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "The request body was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{story_id}": {
      "get": {
        "tags": [
          "Story"
        ],
        "summary": "Get a story",
        "operationId": "get_story",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The story",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "404": {
            "description": "The story was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Story"
        ],
        "summary": "Delete a story",
        "operationId": "delete_story",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The story was deleted"
          },
          "404": {
            "description": "The story was not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Story"
        ],
        "summary": "Update a story",
        "operationId": "update_story",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The story was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "The request body was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "The story was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{story_id}/files": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "List files for a story.",
        "operationId": "get_files",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The parent story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A file metadata array for the story",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_StoryFile"
                }
              }
            }
          },
          "404": {
            "description": "The parent story was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Add files to a story.",
        "operationId": "add_files",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The parent story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A metadata array for the uploaded files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryFile"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The parent story was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{story_id}/files/{file_id}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get file metadata.",
        "operationId": "get_file",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The parent story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The id of the file metadata",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The file metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryFile"
                }
              }
            }
          },
          "404": {
            "description": "The file was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "File"
        ],
        "summary": "Delete a file",
        "operationId": "delete_file",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The parent story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The id of the file to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The file was deleted successfully"
          },
          "404": {
            "description": "The file was not found"
          }
        }
      }
    },
    "/stories/{story_id}/files/{file_id}/contents": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Download file contents.",
        "operationId": "download_file",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The parent story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The id of the file to download",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contents of the file"
          },
          "404": {
            "description": "The file was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{story_id}/tasks": {
      "get": {
        "tags": [
          "Story"
        ],
        "summary": "Get tasks for a story",
        "operationId": "get_tasks",
        "parameters": [
          {
            "name": "story_id",
            "in": "path",
            "description": "The story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The task status filter",
            "required": false,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tasks for the story",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Task"
                }
              }
            }
          },
          "404": {
            "description": "The parent story was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create a task",
        "operationId": "create_task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The task was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "The requesst body was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get a task",
        "operationId": "get_task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "The task id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete a task",
        "operationId": "delete_task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "The task id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The task was deleted"
          },
          "404": {
            "description": "The task was not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Task"
        ],
        "summary": "Update a task",
        "operationId": "update_task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "The task id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The task was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "The request body was invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "The task was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateTaskRequest": {
        "type": "object",
        "description": "The POST body for creating tasks",
        "required": [
          "name",
          "story_id"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": [
              "string",
              "null"
            ]
          },
          "story_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Errors": {
        "type": "object",
        "description": "The type sent as an error response to the client.",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FileUpload": {
        "type": "object",
        "required": [
          "file"
        ],
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Page_Story": {
        "type": "object",
        "description": "A page of domain objects",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "next_page": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Page_StoryFile": {
        "type": "object",
        "description": "A page of domain objects",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "story_id",
                "storage_id",
                "name",
                "size",
                "content_type",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "content_type": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "integer",
                  "format": "int64"
                },
                "storage_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "story_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "next_page": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Page_Task": {
        "type": "object",
        "description": "A page of domain objects",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "story_id",
                "name",
                "status",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "story_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "next_page": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Status": {
        "type": "string",
        "enum": [
          "incomplete",
          "complete"
        ]
      },
      "Story": {
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StoryFile": {
        "type": "object",
        "required": [
          "id",
          "story_id",
          "storage_id",
          "name",
          "size",
          "content_type",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "content_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "storage_id": {
            "type": "string",
            "format": "uuid"
          },
          "story_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StoryRequest": {
        "type": "object",
        "description": "The request body for creating or updating stories",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": [
          "id",
          "story_id",
          "name",
          "status",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "story_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "description": "The PATCH body for updating tasks",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Story"
    },
    {
      "name": "File"
    },
    {
      "name": "Task"
    }
  ]
}
